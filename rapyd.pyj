from game_model import Model
from game_model import ASTEROID_SIZE
from game_controller import Controller

SHOT_COLOR = '#fff'

ASTEROID_SIZE = 180.0
CANVAS_DIM_X = 700
CANVAS_DIM_Y = 600

#BUGS:
# key/boots don't reset after a level (icons?)
# add error msg on death
# add chip count & time to display

key_delta_pos_dict = {'38': 'UP', '40': 'DOWN', '37': 'LEFT', '39': 'RIGHT'}


class Interface:
    def __init__(self, controller):
        self.controller = controller

        document.addEventListener('keydown', def (event):
            r = self.setKey(event.keyCode, True)
            if r:
                event.preventDefault()
        )
        document.addEventListener('keyup', def (event):
            r = self.setKey(event.keyCode, False)
            if r:
                event.preventDefault()
        )

    def setKey(self, k, set):
        if self.controller.pw_up:
            return False

        if k == 82:
            #r key
            self.controller.new_level(False)
            return True
        elif k == 80:
            #p key
            self.controller.password()
            return True

        d_pos = key_delta_pos_dict[String(k)]
        if type(d_pos) is not "undefined":
            self.controller.keyboard_input(d_pos, set)
            return True
        return False


def runGame():
    # The view tells when the controller to start and passes in a reference
    # to itself
    canvas = document.getElementById('myCanvas')
    canvas.width = 700
    canvas.height = 500
    game_engine = Cyborg(canvas)
    controller = Controller(game_engine)

    display = Interface(controller)

